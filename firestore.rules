// @@START_GENERATED_FUNCTIONS@@
function isExerciseMessage(resource) {
  return resource.keys().hasAll([]) &&
          (resource.keys().hasOnly(['name'])) &&
          ((!resource.keys().hasAny(['name'])) || (resource.name is string));
}
function isWorkoutMessage(resource) {
  return resource.keys().hasAll([]) &&
          (resource.keys().hasOnly(['timestamp','weight','reps','person','exercise'])) &&
          ((!resource.keys().hasAny(['exercise'])) || (resource.exercise is path)) &&
          ((!resource.keys().hasAny(['person'])) || (resource.person is string)) &&
          ((!resource.keys().hasAny(['reps'])) || (resource.reps is int && resource.reps >= -2147483648 && resource.reps <= 2147483647)) &&
          ((!resource.keys().hasAny(['weight'])) || (resource.weight is int && resource.weight >= -2147483648 && resource.weight <= 2147483647)) &&
          ((!resource.keys().hasAny(['timestamp'])) || (resource.timestamp is timestamp));
}
// @@END_GENERATED_FUNCTIONS@@

service cloud.firestore {
  match /databases/{database}/documents {
    match /exercises/{exercise} {
      allow read,delete: if isQC();
      allow create,update: if isExerciseMessage(request.resource.data) && isQC();
    }
    match /workouts/{workout} {
      allow read,delete: if isQC();
      allow create,update: if isWorkoutMessage(request.resource.data) && isQC();
    }
  }
}

function isQC() {
  return request.auth != null && (request.auth.token.email == 'quenton.cook@gmail.com' || request.auth.token.email == 'cjcanonigo@gmail.com');
}
